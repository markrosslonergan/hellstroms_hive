<?xml version="1.0" ?>

<!-- Some basic information, a tag that defines uniquely this analysis, and a topology that also defines it -->
<topology tag="1g0pCohNeutrino2022" name ="SSV" def = "preselection_cut==1" bdtcut = "(0)"/>

<covar dir = "Covar_DetSysChecks_FinalSelection/" name = "frac_covariance" plotname="" />

<plot_pot>
    <run_period name ="RunI" cut ="( (run_number >= 4952 &amp;&amp; run_number <= 7770))" fraction = "0.249"  />
    <run_period name ="RunII/RunIII" cut ="( ( run_number >= 8317 &amp;&amp; run_number <=  13696) || (run_number >= 13697 &amp;&amp; run_number <= 14116) || (run_number >= 14117 &amp;&amp; run_number <= 18960))" fraction = "0.751" />
</plot_pot>

<!-- ================================================== BDT FILES [First the ones that we stack in things]==================================================== -->
<filedir>/pnfs/uboone/persistent/users/markross/Jan2022_gLEE_files/UniqDir/Precut2Topo/Flatten_Neutrino2022</filedir>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCSingleCoherentTestTextGen.root" tag = "NCSingleCoherentTestTextGenFLAT" hist_style = "hist" dirs = "" col = "(256, 172, 18)" plot_name = "NC Coherent 1 #gamma" signal = "true" plot_on_top = "true" ttree_name="SSV2D">
    <definition>
        <cut>1</cut> 
    </definition>
</bdtfile>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCDeltaRadOverlaySMTrueP.root" tag = "NCDeltaRadOverlaySMTruePFLAT" hist_style = "hist" dirs = "" col = "(0.97,0.75,0.0)" plot_name = "NC #Delta #rightarrow N#gamma (1+p)" signal = "false" plot_on_top = "false" fillstyle="3245" ttree_name="SSV2D">
    <definition>
        <cut>1</cut>
    </definition>
</bdtfile>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCDeltaRadOverlaySMTrueN.root" tag = "NCDeltaRadOverlaySMTrueNFLAT" hist_style = "hist" dirs = "" col = "(0.9,0.82,0.05)" plot_name = "NC #Delta #rightarrow N#gamma (0p)" signal = "false" plot_on_top = "false" fillstyle="3254" ttree_name="SSV2D" >
    <definition>
        <cut>1</cut>
    </definition>
</bdtfile>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCPi0Coh.root" tag = "NCPi0CohFLAT" hist_style = "hist" dirs = "" col = "(255,189,189)" plot_name = "NC 1 #pi^{0} Coherent"  scale = "1.0" plot_on_top = "false" ttree_name="SSV2D" >
    <definition>
        <cut> 1 </cut>
    </definition>
</bdtfile>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCPi0NotCoh.root" tag = "NCPi0NotCohFLAT" hist_style = "hist" dirs = "" col = "(1,0.4,0.4)" plot_name = "NC 1 #pi^{0} Non-Coherent"  scale = "1.0" plot_on_top = "false" ttree_name="SSV2D">
    <definition>
        <cut>1</cut>
    </definition>
</bdtfile>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_CC1Pi0.root" tag = "CC1Pi0FLAT" hist_style = "hist" dirs = "" col = "(0.4,0.4,1.0)" plot_name = "CC #nu_{#mu} 1 #pi^{0}"  scale = "1.0" plot_on_top = "false" ttree_name="SSV2D">
    <definition>
        <cut> 1 </cut> 
    </definition>
</bdtfile>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_BNBOtherExtra.root" tag = "BNBOtherExtraFLAT" hist_style = "hist" dirs = "" col = "(0.6,0.8,1.0)" plot_name = "BNB Other"  scale = "1.0" plot_on_top = "false" ttree_name="SSV2D">
    <definition>
        <cut>1</cut>  
    </definition>
</bdtfile>


<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NueOverlays.root" tag = "NueOverlaysFLAT" hist_style = "hist" dirs = "" col = "(0.9,0.5,0.9)" plot_name = "CC #nu_{e}/#bar{#nu_{e}} Intrinsic" ttree_name="SSV2D">
    <definition>
        <cut> 1 </cut>
    </definition>
</bdtfile>


<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_Dirt.root" tag = "DirtFLAT" hist_style = "hist" dirs = "" col = "(0.6,0.35,0.25)" plot_name = "Dirt" scale="1.0" mergedown="true" ttree_name="SSV2D"> 
    <definition>
        <cut>1</cut>
    </definition>
</bdtfile>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_OTPCExtra.root" tag = "OTPCExtraFLAT" hist_style = "hist" dirs = "" col = "(0.6,0.4,0.2)" plot_name = "Dirt (Outside TPC)"  scale = "1.0" plot_on_top = "false" ttree_name="SSV2D">
    <definition>
        <cut>1</cut>
    </definition>
</bdtfile>


<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_FinalSelection1g0p.root" tag = "FinalSelection1g0pFLAT" hist_style = "E1p" dirs = "" col = "(0.0,0.0,0.0)" plot_name = "BNB Data, Total:" ttree_name="SSV2D" >
    <definition><cut>1</cut></definition>
    <data type="OnBeam" plot_name="Runs 1-3">
        <tor860_wcut> 4.566e+19  </tor860_wcut>   
        <E1DCNT_wcut> 10127594.0 </E1DCNT_wcut>   
    </data>
</bdtfile>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_BNBext.root" tag = "BNBextFLAT" hist_style = "hist" dirs = "" col = "(.2,0.8,0.2)" plot_name = "Cosmic Data" fillstyle = "3333" scale = "1" ttree_name="SSV2D">
    <definition>
        <cut> 1 </cut>
    </definition>
    <data type="OffBeam">
        <tor860_wcut> 4.566e+19  </tor860_wcut>   
        <E1DCNT_wcut> 10127594.0 </E1DCNT_wcut>   
        <EXT>180439635.0</EXT>  
    </data>
</bdtfile>



<!-- ================================================== BDT FILES [Now the training files]==================================================== -->

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCpi0Train.root" tag = "CxCSSVTrainFLAT" hist_style = "hist" dirs = "" col = "(1,0.4,0.4)" plot_name = "SSV CxC Train" fillstyle = "3333" scale = "1" ttree_name="SSV2D">
    <definition>
        <cut> 1 </cut>
    </definition>
    <training>
        <cut> sss_candidate_pdg==22</cut>
        <cut> sss_candidate_parent_pdg==111</cut>
        <cut> sss_candidate_trackid!=sim_shower_trackID_0</cut>
    </training>
</bdtfile>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCpi0Test.root" tag = "CxCSSVTestFLAT" hist_style = "hist" dirs = "" col = "(1,0.4,0.4)" plot_name = "SSV CxC Test" fillstyle = "3333" scale = "1" ttree_name="SSV2D" >
    <definition>
        <cut> 1 </cut>
    </definition>
    <training>
        <cut> sss_candidate_pdg==22</cut>
        <cut> sss_candidate_parent_pdg==111</cut>
        <cut> sss_candidate_trackid!=sim_shower_trackID_0</cut>
    </training>
</bdtfile>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCCoherentTextGenTrain.root" tag = "NCCoherentTextGenTrainFLAT" hist_style = "hist" dirs = "" col = "(255, 172, 18)" plot_name = "NC Coh 1 #gamma Train" fillstyle = "3333" scale = "1"  ttree_name="SSV2D">
    <definition>
        <cut> 1</cut>
    </definition>
    <training>
        <cut> 1</cut>
    </training>
</bdtfile>


<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCCoherentTextGenTest.root" tag = "NCCoherentTextGenTestFLAT" hist_style = "hist" dirs = "" col = "(255, 172, 18)" plot_name = "NCCoh 1 #gamma Test" fillstyle = "3333" scale = "1" ttree_name="SSV2D" >
    <definition>
        <cut> 1</cut>
    </definition>
    <training>
        <cut> 1 </cut>
    </training>
</bdtfile>

<!-- use to apply SSV bdt to all clusters in the NCpi0 training and test sample for use at later stage -->
<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCpi0Train.root" tag = "NCpi0TrainFLAT" hist_style = "hist" dirs = "" col = "(1,0.4,0.4)" plot_name = "NCpi0 Train" fillstyle = "3333" scale = "1" ttree_name="SSV2D">
    <definition>
        <cut> 1 </cut>
    </definition>
    <training>
        <cut> 1</cut>
    </training>
</bdtfile>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCpi0Test.root" tag = "NCpi0TestFLAT" hist_style = "hist" dirs = "" col = "(1,0.4,0.4)" plot_name = "NCpi0 Test" fillstyle = "3333" scale = "1" ttree_name="SSV2D" >
    <definition>
        <cut> 1 </cut>
    </definition>
    <training>
        <cut> 1 </cut>
    </training>
</bdtfile>

<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCDeltaRadTrain.root" tag = "NCDeltaRadTrainFLAT" hist_style = "hist" dirs = "" col = "(255, 172, 18)" plot_name = "NC Delta Train" fillstyle = "3333" scale = "1"  ttree_name="SSV2D">
    <definition>
        <cut> 1</cut>
    </definition>
    <training>
        <cut> 1</cut>
    </training>
</bdtfile>


<bdtfile filename = "FLATTEN_1g0pCohNeutrino2022_NCDeltaRadTest.root" tag = "NCDeltaRadTestFLAT" hist_style = "hist" dirs = "" col = "(255, 172, 18)" plot_name = "NC Delta Test" fillstyle = "3333" scale = "1"  ttree_name="SSV2D">
    <definition>
        <cut> 1</cut>
    </definition>
    <training>
        <cut> 1</cut>
    </training>
</bdtfile>



<!-- ============================================== ACTUAL BDT TMVA Setup ==================================== -->

<mva type="BDT" use="yes" tag = "SSV2D_CxC" name ="SSV flat BDT" binning = "(24,0.0,1.0)">
    <method type = "XGBoost" use = "yes">
        <param> n_trees= 1000</param>
        <param> tree_method=exact</param>
        <param> n_gpus=0</param>
        <param> objective=binary:logistic</param>
        <param> gamma=1.0</param>          <!--   Minimum reduction required to split . The larger gamma is, the more conservative the algorithm will b    e.    -->
        <param> max_depth=6</param>    <!-- How many layers deep each tree -->
        <param> eta=0.05</param>        <!-- Learning Rate -->
        <param> subsample=0.9</param> <!-- % of events passed to each tree -->
        <param> colsample_bytree= 0.95</param>   <!-- % of features that are passed to each tree  -->
        <param> verbosity=1</param>
    </method>
    <file      
        sig_train_tag = "CxCSSVTrainFLAT"
        sig_test_tag = "CxCSSVTestFLAT"
        bkg_test_cut = "1"
        bkg_train_tag = "NCCoherentTextGenTrainFLAT"
        bkg_test_tag = "NCCoherentTextGenTestFLAT"
        sig_test_cut = "1"
        />
    <scan min = "0.54" max = "0.58" steps="5"/>
</mva>

<!-- ================================================== PRE-CUTS   ==================================================== -->


<precut def = "1" name = "No Cut"/>


<!-- ============================================== Variables, BDT training and otherwise ====================================== -->


<var def = "sss_candidate_energy" binning = "(50, 0, 400)" unit = "Cluster Energy" type = "d"     training="0" group="4404"/>
<var def = "sss_candidate_energy/corrected_shower_energy" binning = "(50,0,2)" unit = "Ratio energy to shower enegry" type = "d" training = "0" group="4404"/>
<var def = "sss_candidate_wire_tick_based_length" binning = "(50, 0, 100)" unit = "Cluster Length" type = "d"     training="0" group="4404"/>
<var def = "sss_candidate_num_hits" binning = "(50, 0, 100)" unit = "Number Hits" type = "d"     training="0" group="4404"/>
<var def = "sss_candidate_PCA" binning = "(50, 0, 1)" unit = "PCA" type = "d"     training="0" group="4404"/>
<var def = "sss_candidate_impact_parameter" binning = "(51, 0, 250)" unit = "impact par" type = "d"     training="0" group="4404"/>
<var def = "sss_candidate_num_wires" binning = "(50, 0, 50)" unit = "Num Wires" type = "d"     training="0" group="4404"/>
<var def = "sss_candidate_num_ticks" binning = "(50, 0, 50)" unit = "Num Ticks" type = "d"     training="0" group="4404"/>
<var def = "sss_candidate_mean_ADC" binning = "(50, 0, 500)" unit = "Mean ADC" type = "d"     training="0" group="4404"/>
<var def = "sss_candidate_ADC_RMS" binning = "(50, 0, 500)" unit = " ADC RMS" type = "d"     training="0" group="4404"/>
<var def = "sss_candidate_fit_constant" binning = "(50, 0, 250)" unit = "Fit Const" type = "d"     training="0" group="4404"/>
<var def = "sss_candidate_fit_slope" binning = "(50, 0, 50)" unit = "Fit Slope" type = "d"     training="0" group="4404"/>
<var def = "sss_candidate_angle_to_shower*180.0/3.14159" binning = "(50, 0, 180)" unit = "2DAngleToShower" type = "d"     training="0" group="4404"/>
<var def = "sss_candidate_min_dist" binning = "(50,0,250)" unit = "Distance to vertex" type = "d" training="0" group="4404"/>
<var def = "sqrt(2.0*(sss_corrected_candidate_energy)*corrected_shower_energy*(1.0-cos(sss_candidate_angle_to_shower)))" binning = "(50,0,400)" unit = "Simple Invar" training="0" group="4404" type="d"/>
<!-- =================  ======================== -->
<var def = "sss_candidate_remerge" binning = "(2, 0, 1)" unit = "Remerge" type = "d"     training="" group="4404"/>
<var def = "sss_candidate_fit_slope" binning = "(50, 0, 50)" unit = "Fit Slope" type = "d"     training="" group="4404"/>
<var def = "fabs(sss_candidate_max_tick/25.0-sss_candidate_min_tick/25.0)*fabs(sss_candidate_max_wire*0.3-sss_candidate_min_wire*0.3)" binning = "(50,0,1000)" unit="cluster extent wire x tick [fake cm]^{2}" training="" group="4404" type="d"/>
<var def = "fabs(sss_candidate_max_wire*0.3-sss_candidate_min_wire*0.3)" binning = "(50,0,100)" unit="cluster extent wire [fake cm]" training="" group="4404" type="d"/>
<var def = "fabs(sss_candidate_max_tick/25.0-sss_candidate_min_tick/25.0)" binning = "(50,0,100)" unit="cluster extent tick [fake cm]" training="" group="4404" type="d"/>


<var def ="1g0pCohFeb2022SSV_mva" binning="(50,0,1)" unit = "SSV v2 Score" type="d" training="" group="111" logplot="true"/>
<!-- ================= Efficiency  ======================== -->


<efficiency denom_stage = "-1" denom_cut = "mctruth_num_exiting_pi0 ==1" numer_stage = "0" numer_cut = "sim_shower_pdg==22 &amp;&amp; sim_shower_parent_pdg==111" /> 


<!-- ================= RECO-MC Matching ======================== -->
<!--<recomc>
    <def name="Cosmic Contaminated" col ="( 126,126,241)"> 
        (sim_shower_overlay_fraction &gt; 0.4 ||  sim_track_overlay_fraction &gt; 0.4 )        
    </def> 
    <def name="No visible p^{+} or #gamma" col ="(239,202,140)"> 
        !((sim_shower_overlay_fraction &gt; 0.4 ||  sim_track_overlay_fraction &gt; 0.4) ) &amp;&amp; ( Sum$(mctruth_exiting_proton_energy-0.93827 &gt; 0.02 )==0 ||  (mctruth_exiting_photon_energy &lt; 0.02))          
    </def> 
    <def name="More than 1 p^{+}" col ="(127,231,204)"> 
        !((sim_shower_overlay_fraction &gt; 0.4 ||  sim_track_overlay_fraction &gt; 0.4) ) &amp;&amp; ( Sum$(mctruth_exiting_proton_energy-0.93827 &gt; 0.02 )>1 )          
    </def> 

    <def name="Bad Reco" col ="(223,227,142)"> 
        ((sim_shower_overlay_fraction &lt; 0.4 &amp;&amp;  sim_track_overlay_fraction &lt; 0.4) ) &amp;&amp; ( Sum$(mctruth_exiting_proton_energy-0.93827 &gt; 0.02 )==1 &amp;&amp;  (mctruth_exiting_photon_energy &gt; 0.02))  &amp;&amp; !(sim_shower_pdg==22 &amp;&amp;sim_track_pdg==2212) 
    </def> 
    <def name = "Signal Definition" col="(241,126,126)">
        ((sim_shower_overlay_fraction &lt; 0.4 &amp;&amp;  sim_track_overlay_fraction &lt; 0.4) ) &amp;&amp; ( Sum$(mctruth_exiting_proton_energy-0.93827 &gt; 0.02 )==1 &amp;&amp;  (mctruth_exiting_photon_energy &gt; 0.02))  &amp;&amp; (sim_shower_pdg==22 &amp;&amp;sim_track_pdg==2212) &amp;&amp;  mctruth_nu_vertex_x &gt; 5.0 &amp;&amp; mctruth_nu_vertex_x &lt; 252.35 &amp;&amp; mctruth_nu_vertex_y &gt; -111.5 &amp;&amp; mctruth_nu_vertex_y &lt; 111.5 &amp;&amp; mctruth_nu_vertex_z &gt; 5.0 &amp;&amp; mctruth_nu_vertex_z &lt; 1031.8 &amp;&amp; mctruth_num_exiting_pi0==0 
    </def>
</recomc>
-->
<!--
<recomc>
    <def name="QuasiElastic" col ="(1.0,0.4,0.4)"> 
        GTruth_Gscatter == 1             
    </def> 
    <def name="DeepInelastic" col ="(0.48,0.87,0.3)"> 
        GTruth_Gscatter == 3             
    </def> 
    <def name = "Resonant" col="(0.41,0.38,0.97)">
        GTruth_Gscatter == 4             
    </def>
    <def name = "Coherent" col="(0.8,0.2,0.8)">
        GTruth_Gscatter == 5
    </def>
    <def name = "MEC" col="(1.0,1.0,0.4)">
        GTruth_Gscatter == 10
    </def>
</recomc>
-->

<recomc>
    <def name="NC #Delta Radiative #gamma" col ="(1.0,0.4,0.4)"> 
        sim_shower_pdg[0] == 22 &amp;&amp; sim_shower_parent_pdg[0] != 111 &amp;&amp; mctruth_is_delta_radiative ==1 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def> 
    <def name="CC #pi^{0}" col ="(0.0,0.0,0.4)"> 
        sim_shower_pdg[0] == 22 &amp;&amp; sim_shower_parent_pdg[0] == 111 &amp;&amp; mctruth_cc_or_nc==0 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def> 
    <def name = "NC #pi^{0}" col="(0.0,0.0,1.0)">
        sim_shower_pdg[0] == 22 &amp;&amp; sim_shower_parent_pdg[0] == 111 &amp;&amp; mctruth_cc_or_nc==1 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def>
    <def name = "Non #pi^{0} #gamma" col="(0.8,0.2,0.8)">
        sim_shower_pdg[0] == 22 &amp;&amp; sim_shower_parent_pdg[0] != 111 &amp;&amp; mctruth_is_delta_radiative!=1 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def>
    <def name = "Intrinsic #nu_{e} electron" col="(1.0,1.0,0.4)">
        (mctruth_lepton_pdg[0])==11 &amp;&amp; abs(sim_shower_pdg[0]) ==11 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def>
    <def name = "BNB Michel e^{#pm}" col="(1.0,0.6,0.0)">
        abs(sim_shower_pdg[0]) ==11 &amp;&amp; abs(sim_shower_parent_pdg[0])==13 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )
    </def>
    <def name = "Overlay" col="(0.2,0.8,0.2)">
        (sim_shower_overlay_fraction[0] >=0.8 )
    </def>
</recomc>

<alias key="GE" value ="((reco_shower_energy_plane2[0]+reco_shower_energy_max[0]*(reco_shower_energy_plane2[0]==0)))" />
<alias key="GEO" value ="((reco_shower_energy_plane2[0]+reco_shower_energy_max[0]*(reco_shower_energy_plane2[0]==0))*1.21 +10.0)" /><alias key="PM" value ="(0.938272)"/>
<alias key="GDEDXKAL" value ="(reco_shower_kalman_dEdx_plane2_median[0]+(reco_shower_kalman_dEdx_allplane_median[0]*(reco_shower_kalman_dEdx_plane2_median==0)))"/>
<alias key="GEOR" value ="((reco_shower_energy_plane2[0]+reco_shower_energy_max[0]*(reco_shower_energy_plane2[0]==0))*1.21989 +8.50486)" />

<alias key="PE" value ="(reco_track_proton_kinetic_energy[0]+0.938272)"/>
<alias key="PP" value = "(sqrt(pow(reco_track_proton_kinetic_energy[0]+0.938272,2)-0.938272*0.938272))"/>
<alias key="LT" value ="0"/>

<alias key = "GTM" value = "sqrt(pow(0.001*reco_shower_energy_max[0]*reco_shower_diry[0],2)+pow(0.001*reco_shower_energy_max[0]*reco_shower_dirx[0],2))"/>
<alias key = "PTM" value = "sqrt(pow((reco_track_proton_kinetic_energy[0]+0.938272)*reco_track_diry[0],2)+pow((reco_track_proton_kinetic_energy[0]+0.938272)*reco_track_dirx[0],2))"/>

<alias key = "SIDX" value ="(reco_shower_startx[0]-reco_track_startx[0])/(sqrt( pow(reco_shower_startx[0]-reco_track_startx[0],2)+   pow(reco_shower_starty[0]-reco_track_starty[0],2) + pow(reco_shower_startz[0]-reco_track_startz[0],2)    ))"/>
<alias key = "SIDY" value ="(reco_shower_starty[0]-reco_track_starty[0])/(sqrt( pow(reco_shower_startx[0]-reco_track_startx[0],2)+   pow(reco_shower_starty[0]-reco_track_starty[0],2) + pow(reco_shower_startz[0]-reco_track_startz[0],2)    ))"/>
<alias key = "SIDZ" value ="(reco_shower_startz[0]-reco_track_startz[0])/(sqrt( pow(reco_shower_startx[0]-reco_track_startx[0],2)+   pow(reco_shower_starty[0]-reco_track_starty[0],2) + pow(reco_shower_startz[0]-reco_track_startz[0],2)    ))"/>

<alias key="TLDIRY" value= "(mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1])/sqrt( (mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0])*(mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0]) + (mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1])*(mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1]) +(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2])*(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2]))"  />
<alias key="TLDIRX" value= "(mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0])/sqrt( (mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0])*(mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0]) + (mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1])*(mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1]) +(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2])*(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2]))"  />
<alias key="TLDIRZ" value= "(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2])/sqrt( (mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0])*(mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0]) + (mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1])*(mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1]) +(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2])*(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2]))"  />

<alias key="TSDIRY" value= "(mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1])/sqrt( (mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0])*(mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0]) + (mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1])*(mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1]) +(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2])*(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2]))"  />
<alias key="TSDIRX" value= "(mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0])/sqrt( (mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0])*(mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0]) + (mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1])*(mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1]) +(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2])*(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2]))"  />
<alias key="TSDIRZ" value= "(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2])/sqrt( (mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0])*(mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0]) + (mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1])*(mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1]) +(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2])*(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2]))"  />




