<?xml version="1.0" ?>
<!-- Some basic information, a tag that defines uniquely this analysis, and a topology that also defines it -->
<topology tag="Ng1pApr2021_v1" name ="N#gamma1p" def = "reco_vertex_size==1 &amp;&amp; reco_asso_tracks==1" bdtcut = "(0)" />

<plot_pot>
    <run_period name ="RunI" cut ="( (run_number >= 4952 &amp;&amp; run_number <= 7770))" fraction = "1.0"  />
</plot_pot>


<!---<covar dir = "." name = "frac_covariance" plotname="Flux &amp; XSec Systematics" />-->
<covar dir = "." name = "frac_covariance" plotname="MC Statistics only" />


<!-- ================================================== BDT FILES [First the ones that we stack in things]==================================================== -->
<filedir>/pnfs/uboone/persistent/users/markross/Feb2021_gLEE_files/</filedir>

<bdtfile filename = "ncdelta_overlay_combined_run13_COFredo_v43.5.spluff.test.deoverlapped.root" tag = "NCDeltaRadOverlaySM" hist_style = "hist" dirs = "singlephotonana/" col = "(255,255,153)" plot_name = "SM NC #Delta Radiative" signal = "true" plot_on_top = "false">
    <definition>
        <cut>mctruth_is_delta_radiative==1</cut>
        <cut>mctruth_cc_or_nc==1</cut>
        <cut>(m_flash_optfltr_pe_beam &gt;20 &amp;&amp; m_flash_optfltr_pe_veto &lt; 20)</cut> 
        <cut>(MCFlux_NuPosX &gt; (0.0-1.55) &amp;&amp; MCFlux_NuPosX &lt; (256.35-1.55) &amp;&amp; MCFlux_NuPosY &gt; (-116.5+0.97) &amp;&amp; MCFlux_NuPosY &lt; (116.5+0.97) &amp;&amp; MCFlux_NuPosZ &gt; 0.0+0.1 &amp;&amp; MCFlux_NuPosZ &lt; 1036.8+0.1)</cut>
    </definition>
</bdtfile>

<bdtfile filename = "ncpi0_overlay_combined_run13_COFredo_tuneCV_v43.5.root" tag = "NCPi0Coh" hist_style = "hist" dirs = "singlephotonana/" col = "(255,189,189)" plot_name = "NC 1 #pi^{0} Coherent"  scale = "1.0" plot_on_top = "false" >
    <definition>
        <cut> GTruth_Gscatter==5 </cut>
        <cut> mctruth_cc_or_nc==1</cut> 
        <cut> mctruth_num_exiting_pi0==1</cut>
        <cut> (m_flash_optfltr_pe_beam&gt;20 &amp;&amp; m_flash_optfltr_pe_veto&lt; 20)</cut>
        <cut> (MCFlux_NuPosX &gt; (0.0-1.55) &amp;&amp; MCFlux_NuPosX &lt; (256.35-1.55) &amp;&amp; MCFlux_NuPosY &gt; (-116.5+0.97) &amp;&amp; MCFlux_NuPosY &lt; (116.5+0.97) &amp;&amp; MCFlux_NuPosZ &gt; 0.0+0.1 &amp;&amp; MCFlux_NuPosZ &lt; 1036.8+0.1)</cut>
    </definition>
</bdtfile>

<bdtfile filename = "ncpi0_overlay_combined_run13_COFredo_tuneCV_v43.5.root" tag = "NCPi0NotCoh" hist_style = "hist" dirs = "singlephotonana/" col = "(1,0.4,0.4)" plot_name = "NC 1 #pi^{0} Non-Coherent"  scale = "1.0" plot_on_top = "false" >
    <definition>
        <cut>GTruth_Gscatter!=5 </cut>
        <cut> mctruth_cc_or_nc==1</cut> 
        <cut> mctruth_num_exiting_pi0==1</cut>
        <cut>(m_flash_optfltr_pe_beam&gt;20 &amp;&amp; m_flash_optfltr_pe_veto&lt; 20)</cut>
        <cut>(MCFlux_NuPosX &gt; (0.0-1.55) &amp;&amp; MCFlux_NuPosX &lt; (256.35-1.55) &amp;&amp; MCFlux_NuPosY &gt; (-116.5+0.97) &amp;&amp; MCFlux_NuPosY &lt; (116.5+0.97) &amp;&amp; MCFlux_NuPosZ &gt; 0.0+0.1 &amp;&amp; MCFlux_NuPosZ &lt; 1036.8+0.1)</cut>
    </definition>
</bdtfile>

<bdtfile filename = "ccpi0_overlay_combined_run123_COFredo_v43.5.root" tag = "CC1Pi0" hist_style = "hist" dirs = "singlephotonana/" col = "(0.4,0.4,1.0)" plot_name = "CC #nu_{#mu} 1 #pi^{0}"  scale = "1.0" plot_on_top = "false" >
    <definition>
        <cut> mctruth_cc_or_nc==0 </cut> 
        <cut> mctruth_num_exiting_pi0==1</cut>
        <cut> mctruth_nu_pdg==14 </cut>
        <cut>(m_flash_optfltr_pe_beam&gt;20 &amp;&amp; m_flash_optfltr_pe_veto&lt; 20)</cut>
        <cut>(MCFlux_NuPosX &gt; (0.0-1.55) &amp;&amp; MCFlux_NuPosX &lt; (256.35-1.55) &amp;&amp; MCFlux_NuPosY &gt; (-116.5+0.97) &amp;&amp; MCFlux_NuPosY &lt; (116.5+0.97) &amp;&amp; MCFlux_NuPosZ &gt; 0.0+0.1 &amp;&amp; MCFlux_NuPosZ &lt; 1036.8+0.1)</cut>
    </definition>
</bdtfile>

<bdtfile filename = "bnb_overlay_combined123_COFredo_withExtra_v43.5.root.deoverlapped.v1.root" tag = "BNBOtherExtra" hist_style = "hist" dirs = "singlephotonana/" col = "(0.6,0.8,1.0)" plot_name = "BNB Other"  scale = "1.0" plot_on_top = "false" >
    <definition>
        <cut> !(mctruth_is_delta_radiative &amp;&amp; mctruth_cc_or_nc==1)</cut>  <!--not nc delta, allows CC delta -->
        <cut> !(mctruth_cc_or_nc==1 &amp;&amp; mctruth_num_exiting_pi0==1)</cut> <!-- Not NC 1 pi0 -->
        <cut> !(mctruth_cc_or_nc==0 &amp;&amp; mctruth_nu_pdg == 14 &amp;&amp; mctruth_num_exiting_pi0==1) </cut><!-- Not CC numu 1 pi0, allows numubar -->
        <cut> !(mctruth_cc_or_nc==0 &amp;&amp; fabs(mctruth_nu_pdg)==12) </cut> <!-- not cc nue or nuebar -->
        <cut> (m_flash_optfltr_pe_beam&gt;20 &amp;&amp; m_flash_optfltr_pe_veto&lt; 20)</cut>
        <cut> (MCFlux_NuPosX &gt; (0.0-1.55) &amp;&amp; MCFlux_NuPosX &lt; (256.35-1.55) &amp;&amp; MCFlux_NuPosY &gt; (-116.5+0.97) &amp;&amp; MCFlux_NuPosY &lt; (116.5+0.97) &amp;&amp; MCFlux_NuPosZ &gt; 0.0+0.1 &amp;&amp; MCFlux_NuPosZ &lt; 1036.8+0.1)</cut>
    </definition>
</bdtfile>


<bdtfile filename = "nue_bdt_testing_sample_COVredo_v43.51.deoverlapped.root" tag = "NueOverlays" hist_style = "hist" dirs = "singlephotonana/" col = "(0.9,0.5,0.9)" plot_name = "CC #nu_{e}/#bar{#nu_{e}} Intrinsic" >
    <definition>
        <cut> mctruth_is_delta_radiative!=1 </cut>
        <cut> fabs(mctruth_nu_pdg)==12 </cut>
        <cut> mctruth_cc_or_nc==0</cut>
        <cut> (m_flash_optfltr_pe_beam&gt;20 &amp;&amp; m_flash_optfltr_pe_veto&lt; 20)</cut>
        <cut>(MCFlux_NuPosX &gt; (0.0-1.55) &amp;&amp; MCFlux_NuPosX &lt; (256.35-1.55) &amp;&amp; MCFlux_NuPosY &gt; (-116.5+0.97) &amp;&amp; MCFlux_NuPosY &lt; (116.5+0.97) &amp;&amp; MCFlux_NuPosZ &gt; 0.0+0.1 &amp;&amp; MCFlux_NuPosZ &lt; 1036.8+0.1)</cut>
    </definition>
</bdtfile>


<bdtfile filename = "dirt_overlay_combined_run123_COFredo_wCryoFix_v43.5.root" tag = "Dirt" hist_style = "hist" dirs = "singlephotonana/" col = "(0.6,0.35,0.25)" plot_name = "Dirt" scale="1.0" mergedown="true"> 
    <definition>
        <cut>1</cut>
        <cut>(m_flash_optfltr_pe_beam&gt;20 &amp;&amp; m_flash_optfltr_pe_veto&lt; 20)</cut>
    </definition>
</bdtfile>

<bdtfile filename = "bnb_overlay_combined123_COFredo_withExtra_v43.5.root.deoverlapped.v1.root" tag = "OTPCExtra" hist_style = "hist" dirs = "singlephotonana/" col = "(0.6,0.4,0.2)" plot_name = "Dirt (Outside TPC)"  scale = "1.0" plot_on_top = "false" >
    <definition>
        <cut>(m_flash_optfltr_pe_beam &gt; 20 &amp;&amp; m_flash_optfltr_pe_veto&lt; 20)</cut>
        <cut>!(MCFlux_NuPosX &gt; (0.0-1.55) &amp;&amp; MCFlux_NuPosX &lt; (256.35-1.55) &amp;&amp; MCFlux_NuPosY &gt; (-116.5+0.97) &amp;&amp; MCFlux_NuPosY &lt; (116.5+0.97) &amp;&amp; MCFlux_NuPosZ &gt; 0.0+0.1 &amp;&amp; MCFlux_NuPosZ &lt; 1036.8+0.1)</cut>
    </definition>
</bdtfile>


<bdtfile filename = "data_5e19_run1_v33.3.uniq.root" tag = "Data5e19" hist_style = "E1p" dirs = "singlephotonana/" col = "(0.0,0.0,0.0)" plot_name = "Data, Run 1 On-Beam">
    <definition><cut>1</cut></definition>
    <data type="OnBeam" plot_name="Unbiased">
        <tor860_wcut>   4.081e+19 </tor860_wcut>   
        <E1DCNT_wcut>   9037544.0</E1DCNT_wcut>   
    </data>
</bdtfile>

<bdtfile filename = "bnbext_run1_combined_v33.3.uniq.spluff.test.root" tag = "BNBextRun1" hist_style = "hist" dirs = "singlephotonana/" col = "(.2,0.8,0.2)" plot_name = "Data, Run 1 Cosmic" fillstyle = "3333" scale = "1.0">
    <definition>
        <cut> 1 </cut>
    </definition>
    <data type="OffBeam">
        <tor860_wcut>   4.081e+19 </tor860_wcut>   
        <E1DCNT_wcut>   9037544.0</E1DCNT_wcut>   
        <EXT>28264427.0</EXT>
    </data>
</bdtfile>


<!-- ================================================== BDT FILES [Now the training files]==================================================== -->

<bdtfile filename = "ncpi0_bdt_training_sample_v33.3.root" tag = "NCpi0Train" hist_style = "hist" dirs = "singlephotonana/" col = "(0.0,0.0,0.0)" plot_name = "NCpi0 Train" fillstyle = "3333" scale = "1">
    <definition>
        <cut> !mctruth_is_delta_radiative==1 </cut>
        <cut> (mctruth_cc_or_nc==1 &amp;&amp; mctruth_num_exiting_pi0==1)</cut>
    </definition>
    <training>
        <cut> sim_shower_overlay_fraction[0]&lt;0.9</cut>
        <cut> sim_shower_pdg[0]==22</cut>
        <cut> sim_track_overlay_fraction[0]&lt;0.9</cut>
        <cut> sim_track_pdg[0]==2212</cut>
    </training>
</bdtfile>

<bdtfile filename = "ncpi0_overlay_combined_run13_v33.3.uniq.root" tag = "NCpi0Test" hist_style = "hist" dirs = "singlephotonana/" col = "(0.2,0.8,0.2)" plot_name = "NCpi0 Test" fillstyle = "3333" scale = "1">
    <definition>
        <cut> !mctruth_is_delta_radiative==1 </cut>
        <cut> (mctruth_cc_or_nc==1 &amp;&amp; mctruth_num_exiting_pi0==1)</cut>
    </definition>
    <training>
        <cut> sim_shower_overlay_fraction[0]&lt;0.9</cut>
        <cut> sim_shower_pdg[0]==22</cut>
        <cut> sim_track_overlay_fraction[0]&lt;0.9</cut>
        <cut> sim_track_pdg[0]==2212</cut>
    </training>
</bdtfile>

<!-- ============================================== ACTUAL BDT TMVA Setup ==================================== -->


<mva type="BDT" use="yes" tag = "NCPi0" name ="NCpi0 focused BDT" binning = "(24,0.0,1.0)">
    <method type = "XGBoost" use = "yes">
        <!--  <param> n_trees=650</param>-->
        <param> n_trees=5000</param>
        <param> tree_method=exact</param>
        <param> n_gpus=0</param>
        <param> objective=binary:logistic</param>
        <param> eval_metric=logloss</param>
        <param> min_child_weight=1</param> 
        <param> gamma=0.1</param>          <!--   Minimum reduction required to split . The larger gamma is, the more conservative the algorithm will be.    -->
        <param> max_depth=8</param>    <!-- How many layers deep each tree -->
        <param> eta=0.02</param>        <!-- Learning Rate -->
        <param> subsample=0.9</param> <!-- % of events passed to each tree -->
        <param> colsample_bytree= 0.95</param>   <!-- % of features that are passed to each tree  -->
        <param> verbosity=1</param>
    </method>
    <file      
        bkg_train_tag = "NCpi0Train"
        bkg_test_tag = "NCpi0Test"
        bkg_test_cut = "1"
        sig_train_tag = "NCpi0Train"
        sig_test_tag = "NCpi0Test"
        sig_test_cut = "1"
        />
    <!--    <scan min = "0.45" max = "0.51" steps="50"/>-->
    <scan min = "0.467404" max = "0.46740401" steps="50"/>
</mva>

<!-- ================================================== PRE-CUTS   ==================================================== -->

<precut def = "(TMath::Min(reco_track_end_dist_to_SCB,reco_track_start_dist_to_SCB)>2 &amp;&amp; reco_vertex_dist_to_SCB > 2)" name = "Track and Vertex Contained in SCB"/>

<precut def = "DeNan(reco_track_mean_trunc_dEdx_plane2[0], reco_track_mean_trunc_dEdx_best_plane[0])>2.0" name="dedx"/>
<precut def = "fabs(reco_track_dirx[0]*reco_shower_implied_dirx[0]+reco_track_diry[0]*reco_shower_implied_diry[0]+reco_track_dirz[0]*reco_shower_implied_dirz[0])<0.99" name = "angle btb"/>
<precut def = "reco_track_proton_kinetic_energy[0]<0.5" name = "En"/>
<precut def = "DeNan(reco_track_calo_energy_plane2[0]*0.001, reco_track_calo_energy_max[0]*0.001) < 0.4" name = "Traxk_max"/>

<!--
<covar dir = "/uboone/app/users/markrl/SBNfit_uBooNE/NEW_Improved_V2/whipping_star/build/bin/Jan2020_technote_v1_1g1p/autoxml" name = "frac_covariance" plotname="Flux, XS and MC stats Error" />-->
<!--<covar dir = "/uboone/app/users/markrl/SBNfit_uBooNE/NEW_Improved_V2/whipping_star/build/bin/Jan2020_technote_v1_1g1p/DetSys/LY/autoxml" name = "frac_covariance"  plotname = "LY and MC Stats"/>-->
     <!--<covar dir = "/uboone/app/users/markrl/SBNfit_uBooNE/NEW_Improved_V2/whipping_star/build/bin/Jan2020_technote_v1_1g1p/DetSys/wireX/autoxml" name = "frac_covariance"  plotname = "WireMod X and MC Stats"/>-->
     <!--<covar dir = "/uboone/app/users/markrl/SBNfit_uBooNE/NEW_Improved_V2/whipping_star/build/bin/Jan2020_technote_v1_1g1p/DetSys/wireYZ/autoxml" name = "frac_covariance"  plotname = "WireMod YZ and MC Stats"/>-->
     <!--<covar dir = "/uboone/app/users/markrl/SBNfit_uBooNE/NEW_Improved_V2/whipping_star/build/bin/Jan2020_technote_v1_1g1p/DetSys/wireA/autoxml" name = "frac_covariance"  plotname = "WireMod A and MC Stats"/>-->
     <!--<covar dir = "/uboone/app/users/markrl/SBNfit_uBooNE/NEW_Improved_V2/whipping_star/build/bin/Jan2020_technote_v1_1g1p/DetSys/AllDet/" name = "frac_covariance" plotname = "Det Sys and MC Stats"/>-->
     <!--<covar dir = "/uboone/app/users/markrl/SBNfit_uBooNE/NEW_Improved_V2/whipping_star/build/bin/Jan2020_technote_v1_1g1p/DetSys/AllDetFluxGenie/" name = "frac_covariance" plotname = "Flux, XS, Det Sys and MC Stats"/>-->
     <!-- <covar dir ="/uboone/app/users/markrl/SBNfit_uBooNE/NEW_Improved_V2/whipping_star/build/bin/Jan2020_technote_v1_1g1p/autoxml/Genie_Only/" name = "frac_covariance" plotname = "Genie only"/>-->

<!-- ============================================== Variables, BDT training and otherwise ====================================== -->

<var def = "reco_asso_showers" binning = "(4,0,4)" unit = "Shower Multiplicity" type="d" training="" group="1"/>
<var def = "reco_asso_showers" binning = "(3,1,4)" unit = "Shower Multiplicity (Zoomed)" type="d" training="" group ="1"/>


<var def = "reco_shower_nuscore[0]" binning = "(24, 0, 1)" unit = "Neutrino Slice Score" type = "d"     training="0"/>
<!-- ################################################################################################################ -->
<!-- ################################################################################################################ -->
<!-- ###################################Dont modify Variables Above this! ########################################### -->
<!-- ################################################################################################################ -->
<!-- ################################################################################################################ -->


<!-- ################################################################################################################ -->
<!-- ######################## The variables below are for plotting in the internal note! ############################ -->
<!-- ################################################################################################################ -->
<!-- ################################################################################################################ -->

<alias key="BNB0" value ="0.9845"/> <!--these aliases are for the final BDT cuts, must be updated properly for the single bdt cut plots -->
<alias key="COS0" value = "0.9531"/>
<alias key="NCP0" value ="0.467404"/>
<alias key="NUE0" value ="0.7474"/>
<alias key="SSV0" value ="0.7088"/>

<!--bdt vars -->
<var def = "1g1pMar2020_v4COSMIC_mva" binning = "(24,0.0,1)" unit = "Cosmic BDT Score" type="d"  training= "" group = "6" logplot = "true" pmin=0.1/>
<var def = "1g1pMar2020_v4NCPi0_mva" binning = "(24,0.0,0.94)" unit = "NC#pi^{0} BDT Score" type="d" training= "" group = "6" logplot = "true" pmin=0.1/>
<var def = "1g1pMar2020_v4BNB_mva" binning = "(25,0.0,1)" unit = "BNB Other BDT Score" type="d"  training= "" group = "6" logplot = "true" pmin=0.1/>
<var def = "1g1pMar2020_v4Nue_mva" binning = "(24,0.0,1)" unit = "#nu_{E} BDT Score" type="d" training= "" group = "6" logplot = "true" pmin=0.1/>
<var def = "1g1pMar2020_v4SSVredo2wCC600parent_mva" binning = "(24,0.0,1.0)" unit = "SSv BDT Score" type="d"  training= "" group = "6" logplot = "true" pmin=0/>

<var def ="(#GEO#*reco_shower_dirz)/sqrt(#GEO#*reco_shower_dirx*#GEO#*reco_shower_dirx +#GEO#*reco_shower_diry*#GEO#*reco_shower_diry + #GEO#*reco_shower_dirz*#GEO#*reco_shower_dirz)" binning = "(24,0.0,1)" unit = "Cosine theta_#gamma" type="d"  training= "" group = "7" />

<var def = "#GEO#" binning = "(3,0,600)" unit = "Corrected Calorimetric Shower Energy [MeV]" type = "d"   training="" group = "8"/>

<!--chapter 5 stage 1+0-->
<var def = "sqrt(#PM#*#PM#+2.0*#GEO#*0.001*(#PE#-#PP#*(reco_track_dirx[0]*reco_shower_implied_dirx[0]+reco_track_diry[0]*reco_shower_implied_diry[0]+reco_track_dirz[0]*reco_shower_implied_dirz[0])))" binning = "(18,0.96,1.45)" unit = "Implied Invariant Mass of Photon-Proton Pair [GeV] (Corrected)" type  = "d"  training = ""  group = "330"/>

<!--chapter 5 stage 1-->
<var def = "DeNan(#GDEDXKAL#,reco_shower_dEdx_amalgamated[0])" binning = "(16,0,8.0)" unit = "Shower dEdx [MeV/cm]" type="d"  training="" group= "331"/>
<var def = "(reco_shower_impact_parameter[0]/reco_shower_conversion_distance[0])" binning = "(18,0,1)" unit = "Shower Impact Parameter/Shower Conversion Distance" type="d"    training="" group = "331"/>
<var def = "(reco_shower_trackscore[0])" binning = "(18,0,0.5)" unit = "Shower Score" type ="d"  training ="" group = "331"/>
<var def = "log(reco_shower_conversion_distance[0])" binning = "(18,-3,7)" unit = " Reconstructed Shower Conversion Distance Log[cm]" type = "d"     training="" group = "331"/>
<var def = "log10(reco_track_spacepoint_max_dist[0])" binning = "(18,-2,1.5)" unit = "Reconstructed Track Max Distance Spacepoint from Line Log[cm]" type = "d"  training = "" group = "331"/>
<var def = "(reco_track_trackscore[0])" binning = "(18,0.5,1)" unit = "Track Score" type ="d"  training ="" group = "331"/>
<var def = "sqrt(pow(0.001*reco_shower_energy_max[0]*reco_shower_diry[0],2)+pow(0.001*reco_shower_energy_max[0]*reco_shower_dirx[0],2))" unit = "Photon Transverse Momentum [GeV]" binning = "(18,0,0.3)" type = "d"  training = "" group = "331"/>
<var def = "sss2d_conv_ranked_conv" binning = "(8,0,80)" unit ="sss2d closest candidate conversion Distance [cm]" type="d"  training="" group = "331"/>
<var def = "sss3d_ioc_ranked_implied_opang" binning = "(18,-1,1)" unit ="sss3d min IOC implied angle w.r.t primary shower [cos]" type="d"  training="" group = "331"/>
<var def = "#GEO#" binning = "(18,40,600)" unit = "Corrected Calorimetric Shower Energy [MeV]" type = "d"   training="" group = "331"/>
<var def = "DeNan(reco_track_mean_trunc_dEdx_plane2[0], reco_track_mean_trunc_dEdx_best_plane[0])" binning =  "(18,2,12)" unit = "Reconstructed Track Truncated Mean dE/dx [MeV/cm]" type = "d"    training="" group = "331"/>

<!--single BDT cut plots -->

<var def = "sqrt(#PM#*#PM#+2.0*#GEO#*0.001*(#PE#-#PP#*(reco_track_dirx[0]*reco_shower_implied_dirx[0]+reco_track_diry[0]*reco_shower_implied_diry[0]+reco_track_dirz[0]*reco_shower_implied_dirz[0])))" binning = "(5,0.96,1.45)" unit = "Implied Invariant Mass of Photon-Proton Pair [GeV] (corrected) Cosmic Only Cut" type  = "d"  training = "" cut = "(1g1pMar2020_v4COSMIC_mva &gt;= 0.99)" group = "335" />
<!--
<var def = "sqrt(#PM#*#PM#+2.0*#GEO#*0.001*(#PE#-#PP#*(reco_track_dirx[0]*reco_shower_implied_dirx[0]+reco_track_diry[0]*reco_shower_implied_diry[0]+reco_track_dirz[0]*reco_shower_implied_dirz[0])))" binning = "(5,0.96,1.45)" unit = "Implied Invariant Mass of Photon-Proton Pair [GeV] (corrected) Cosmic Only Cut" type  = "d"  training = "" cut = "(1g1pMar2020_v4COSMIC_mva &gt;= #COS0#)" group = "335" />
-->

<var def = "sqrt(#PM#*#PM#+2.0*#GEO#*0.001*(#PE#-#PP#*(reco_track_dirx[0]*reco_shower_implied_dirx[0]+reco_track_diry[0]*reco_shower_implied_diry[0]+reco_track_dirz[0]*reco_shower_implied_dirz[0])))" binning = "(5,0.96,1.45)" unit = "Implied Invariant Mass of Photon-Proton Pair [GeV] (corrected) NC#pi^{0} Only Cut" type  = "d"  training = "" cut = "(1g1pMar2020_v4NCPi0_mva &gt;= #NCP0#)" group = "336" />

<var def = "sqrt(#PM#*#PM#+2.0*#GEO#*0.001*(#PE#-#PP#*(reco_track_dirx[0]*reco_shower_implied_dirx[0]+reco_track_diry[0]*reco_shower_implied_diry[0]+reco_track_dirz[0]*reco_shower_implied_dirz[0])))" binning = "(5,0.96,1.45)" unit = "Implied Invariant Mass of Photon-Proton Pair [GeV] (corrected) BNB Other Only Cut" type  = "d"  training = "" cut = "(1g1pMar2020_v4BNB_mva &gt;= #BNB0#)" group = "337"/>

<var def = "sqrt(#PM#*#PM#+2.0*#GEO#*0.001*(#PE#-#PP#*(reco_track_dirx[0]*reco_shower_implied_dirx[0]+reco_track_diry[0]*reco_shower_implied_diry[0]+reco_track_dirz[0]*reco_shower_implied_dirz[0])))" binning = "(5,0.96,1.45)" unit = "Implied Invariant Mass of Photon-Proton Pair [GeV] (corrected) #nu_{e} Only Cut" type  = "d"  training = "" cut = "(1g1pMar2020_v4Nue_mva &gt;= #NUE0#)" group = "338"/>

<var def = "sqrt(#PM#*#PM#+2.0*#GEO#*0.001*(#PE#-#PP#*(reco_track_dirx[0]*reco_shower_implied_dirx[0]+reco_track_diry[0]*reco_shower_implied_diry[0]+reco_track_dirz[0]*reco_shower_implied_dirz[0])))" binning = "(5,0.96,1.45)" unit = "Implied Invariant Mass of Photon-Proton Pair [GeV] (corrected) SSV Only Cut" type  = "d"  training = "" cut = "(1g1pMar2020_v4SSVredo2wCC600parent_mva &gt;= #SSV0#)" group = "339"/>


<!--chapter 5 stage 6-->
<var def = "sqrt(#PM#*#PM#+2.0*#GEO#*0.001*(#PE#-#PP#*(reco_track_dirx[0]*reco_shower_implied_dirx[0]+reco_track_diry[0]*reco_shower_implied_diry[0]+reco_track_dirz[0]*reco_shower_implied_dirz[0])))" binning ="(5,0.96,1.45)" unit = "Implied Invariant Mass of Photon-Proton Pair [GeV] (Corrected)" type  = "d"  training = ""  group = "332"/>
<var def = "#GEO#" binning = "(1,0,600)" unit = "Corrected Calorimetric Shower Energy [MeV]" type = "d"   training="" group = "332"/>


<!-- ################################################################################################################ -->
<!-- ######################## The variables above are for plotting in the internal note! ############################ -->
<!-- ################################################################################################################ -->
<!-- ################################################################################################################ -->

<var def ="((reco_shower_energy_plane2[0]+reco_shower_energy_max[0]*(reco_shower_energy_plane2[0]==0))*1.21989 +8.50486)*0.001" binning="(18,0.05,0.5)" unit = "Reconstructed Shower Energy [GeV]" type="d" training="" group="3303"/>

<var def = "Min$(sss_candidate_min_dist)" binning="(8,0,80)" unit = "Minimum conversion distance of all SSV candidate clusters" type="d" training="" group="7707"/>

<var def ="((reco_shower_energy_plane2[0]+reco_shower_energy_max[0]*(reco_shower_energy_plane2[0]==0))*1.21989 +8.50486)*0.001" binning="(34,0.0,0.8)" unit = "Reconstructed Shower Energy [GeV]" type="d" training="" group="3302" />


<!--pi0 vars -->
<!--
<var def = "sqrt(mctruth_exiting_pi0_E*mctruth_exiting_pi0_E-0.1349766*0.1349766)" binning = "(10,0.0,1.4)" unit ="True #pi^{0} Momentum" type = "d"  training = "" group = "2"/>
<var def = "mctruth_pi0_leading_photon_energy" binning = "(10,0.0,0.8)" unit = "Leading #pi^{0} photon energy" type = "d"  training = "" group = "2" />
<var def = "mctruth_pi0_subleading_photon_energy" binning = "(10,0.0,0.5)" unit = "Sub Leading #pi^{0} photon energy" type = "d"  training = "" group = "2" />
<var def = "atan(#TLDIRY#/#TLDIRX#)" binning = "(10,-3.14159,3.14159)" unit  ="Leading #pi^{0} photon #phi" type="d"  training = "" group="2"/>
<var def = "atan(#TSDIRY#/#TSDIRX#)" binning = "(10,-3.14159,3.14159)" unit  ="SubLeading #pi^{0} photon #phi" type="d"  training = "" group="2"/>
<var def = "atan(sqrt(#TLDIRY#*#TLDIRY#+#TLDIRX#*#TLDIRX#)/#TLDIRZ#)" binning = "(10,-3.14159,3.14159)" unit  ="Leading #pi^{0} photon #theta" type="d"  training = "" group="2"/>
<var def = "atan(sqrt(#TSDIRY#*#TSDIRY#+#TSDIRX#*#TSDIRX#)/#TSDIRZ#)" binning = "(10,-3.14159,3.14159)" unit  ="SubLeading #pi^{0} photon #theta" type="d"  training = "" group="2"/>

<var def = "mctruth_pi0_subleading_photon_end[0]" binning = "(16,-100,350)" unit = "SubLeading Photon End Point X"  training ="" type ="d" group = "3" />
<var def = "mctruth_pi0_subleading_photon_end[1]" binning = "(16,-200,200)" unit = "SubLeading Photon End Point Y"  training ="" type ="d" group = "3" />
<var def = "mctruth_pi0_subleading_photon_end[2]" binning = "(16,-200,1500)" unit = "SubLeading Photon End Point Z"  training ="" type ="d" group = "3" />
<var def = "acos(#TLDIRX#*#TSDIRX#+#TLDIRY#*#TSDIRY#+#TLDIRZ#*#TSDIRZ#)" binning = "(10,0,3.14159)" unit = "True #pi^{0} 2-shower opening angle"  training ="" type="d" group = "2"/>

<var def = "sqrt( (mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0])* (mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0]) + (mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1])* (mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1])+ (mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2])* (mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2])) " binning = "(10,0,60)" unit = "True Subleading Conversion Distance [cm]"  training=""  type="d" group="2"/>
<var def = "sqrt( (mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0])* (mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0]) + (mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1])* (mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1])+ (mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2])* (mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2])) " binning = "(10,0,60)" unit = "True Leading Conversion Distance [cm]"  training=""  type="d" group="2"/>

<var def="fabs(mctruth_pi0_leading_photon_energy-mctruth_pi0_subleading_photon_energy)/sqrt(mctruth_exiting_pi0_E*mctruth_exiting_pi0_E - 0.134966*0.134966)" binning="(10,0,1)" unit = "True Shower CoM Decay Angle"  training = "" type="d" group="2"/>

<var def="TMath::ATan2(mctruth_exiting_pi0_py,mctruth_exiting_pi0_px)*180.0/3.14159" binning="(16,-180,180)" unit = "True #pi^{0} #phi"  training="" type="d" group="4"/>
<var def="TMath::ATan2(sqrt(mctruth_exiting_pi0_py*mctruth_exiting_pi0_py+ mctruth_exiting_pi0_px*mctruth_exiting_pi0_px),mctruth_exiting_pi0_pz)*180.0/3.14159" binning="(16,0,180)" unit = "True #pi^{0} #theta"  training="" type="d" group="4"/>
-->


<!--<var def ="((reco_shower_energy_plane2[0]+reco_shower_energy_max[0]*(reco_shower_energy_plane2[0]==0))*1.21989 +8.50486)*0.001" binning="alt(0.0,0.15,0.225,0.3,0.375,0.450,0.6)" unit = "Reconstructed Shower Energy [GeV]" type="d" training="" group="333"/>-->

<!--
<var def ="((reco_shower_energy_plane2[0]+reco_shower_energy_max[0]*(reco_shower_energy_plane2[0]==0))*1.21989 +8.50486)*0.001" binning="alt(0.0,0.15,0.225,0.3,0.375,0.450,0.6)" unit = "Reconstructed Shower Energy [GeV]" type="d" training="" group="333"/>
<var def = "cos(atan2(sqrt(pow(reco_shower_implied_diry[0], 2)+ pow(reco_shower_implied_dirx[0],2)),reco_shower_implied_dirz[0]))" binning = "(8,-1,1)" unit = "Reconstructed Shower Implied Cos(#theta_{azy})" type = "d"     training="" group="334"/>

<var def = "sqrt(#PM#*#PM#+2.0*#GEO#*0.001*(#PE#-#PP#*(reco_track_dirx[0]*reco_shower_implied_dirx[0]+reco_track_diry[0]*reco_shower_implied_diry[0]+reco_track_dirz[0]*reco_shower_implied_dirz[0])))" binning = "(18,0.96,1.45)" unit = "Implied Invariant Mass of Photon-Proton Pair [GeV] (Corrected)" type  = "d"  training = ""  group = "330"/>
<var def = "sqrt(#PM#*#PM#+2.0*#GEO#*0.001*(#PE#-#PP#*(reco_track_dirx[0]*reco_shower_implied_dirx[0]+reco_track_diry[0]*reco_shower_implied_diry[0]+reco_track_dirz[0]*reco_shower_implied_dirz[0])))" binning = "(6,1.0,1.45)" unit = "Implied Invariant Mass of Photon-Proton Pair [GeV] (Corrected)" type  = "d"  training = ""  group = "331"/>
-->

<!--chapter 5 stage 6-->
<!--
<var def = "sqrt(#PM#*#PM#+2.0*#GEO#*0.001*(#PE#-#PP#*(reco_track_dirx[0]*reco_shower_implied_dirx[0]+reco_track_diry[0]*reco_shower_implied_diry[0]+reco_track_dirz[0]*reco_shower_implied_dirz[0])))" binning = "(9,1.0,1.45)" unit = "Implied Invariant Mass of Photon-Proton Pair [GeV] (Corrected)" type  = "d"  training = ""  group = "332"/>
<var def = "#GEO#" binning = "(6,0,600)" unit = "Corrected Calorimetric Shower Energy [MeV]" type = "d"   training="" group = "332"/>
-->



<alias key="xc" value ="TMath::Min(abs(mctruth_nu_vertex_x-0),abs(256.35-mctruth_nu_vertex_x))"/>
<alias key="yc" value ="TMath::Min(abs(mctruth_nu_vertex_y-(-116.5)),abs(116.5-mctruth_nu_vertex_y))"/>
<alias key="zc" value ="TMath::Min(abs(mctruth_nu_vertex_z-0),abs(1036.8-mctruth_nu_vertex_z))"/>
<alias key="sgn1" value ="(mctruth_nu_vertex_x-256.35)/abs(mctruth_nu_vertex_x-256.35)*(mctruth_nu_vertex_x-0)/abs(mctruth_nu_vertex_x-0)"/> <!--Negative: inside-->
<alias key="sgn2" value ="(mctruth_nu_vertex_y-116.5)/abs(mctruth_nu_vertex_y-116.5)*(mctruth_nu_vertex_y+116.5)/abs(mctruth_nu_vertex_y+116.5)"/> <!--Negative: inside-->
<alias key="sgn3" value ="(mctruth_nu_vertex_z-1036.8)/abs(mctruth_nu_vertex_z-1036.8)*(mctruth_nu_vertex_z-0)/abs(mctruth_nu_vertex_z-0)"/> <!--Negative: inside-->
<alias key="sgn" value ="max(max(#sgn1#,#sgn2#),#sgn3#)*-1"/> <!--Positive: inside-->
<var def = "#sgn#*TMath::Min(TMath::Min(#yc#,#xc#),#zc#)" binning = "(104,-400,120)" unit = "MCTruth Vertex Distance to active TPC boundary (inside:>0)" type="d" logplot="false" training="" group = "1109"/>

<!-- ================= Efficiency  ======================== -->

<efficiency denom_stage = "-1" denom_cut = "mctruth_num_exiting_pi0 ==1" numer_stage = "0" numer_cut = "sim_shower_pdg==22 &amp;&amp; sim_shower_parent_pdg==111" /> 

<!-- ================= RECO-MC Matching ======================== -->
<recomc>
    <def name="Cosmic Contaminated" col ="( 126,126,241)"> 
        (sim_shower_overlay_fraction &gt; 0.4 ||  sim_track_overlay_fraction &gt; 0.4 )        
    </def> 
    <def name="No visible p^{+} or #gamma" col ="(239,202,140)"> 
        !((sim_shower_overlay_fraction &gt; 0.4 ||  sim_track_overlay_fraction &gt; 0.4) ) &amp;&amp; ( Sum$(mctruth_exiting_proton_energy-0.93827 &gt; 0.02 )==0 ||  (mctruth_exiting_photon_energy &lt; 0.02))          
    </def> 
    <def name="More than 1 p^{+}" col ="(127,231,204)"> 
        !((sim_shower_overlay_fraction &gt; 0.4 ||  sim_track_overlay_fraction &gt; 0.4) ) &amp;&amp; ( Sum$(mctruth_exiting_proton_energy-0.93827 &gt; 0.02 )>1 )          
    </def> 

    <def name="Bad Reco" col ="(223,227,142)"> 
        ((sim_shower_overlay_fraction &lt; 0.4 &amp;&amp;  sim_track_overlay_fraction &lt; 0.4) ) &amp;&amp; ( Sum$(mctruth_exiting_proton_energy-0.93827 &gt; 0.02 )==1 &amp;&amp;  (mctruth_exiting_photon_energy &gt; 0.02))  &amp;&amp; !(sim_shower_pdg==22 &amp;&amp;sim_track_pdg==2212) 
    </def> 
    <def name = "Signal Definition" col="(241,126,126)">
        ((sim_shower_overlay_fraction &lt; 0.4 &amp;&amp;  sim_track_overlay_fraction &lt; 0.4) ) &amp;&amp; ( Sum$(mctruth_exiting_proton_energy-0.93827 &gt; 0.02 )==1 &amp;&amp;  (mctruth_exiting_photon_energy &gt; 0.02))  &amp;&amp; (sim_shower_pdg==22 &amp;&amp;sim_track_pdg==2212) &amp;&amp;  mctruth_nu_vertex_x &gt; 5.0 &amp;&amp; mctruth_nu_vertex_x &lt; 252.35 &amp;&amp; mctruth_nu_vertex_y &gt; -111.5 &amp;&amp; mctruth_nu_vertex_y &lt; 111.5 &amp;&amp; mctruth_nu_vertex_z &gt; 5.0 &amp;&amp; mctruth_nu_vertex_z &lt; 1031.8 &amp;&amp; mctruth_num_exiting_pi0==0 
    </def>
</recomc>

<!--
<recomc>
    <def name="QuasiElastic" col ="(1.0,0.4,0.4)"> 
        GTruth_Gscatter == 1             
    </def> 
    <def name="DeepInelastic" col ="(0.48,0.87,0.3)"> 
        GTruth_Gscatter == 3             
    </def> 
    <def name = "Resonant" col="(0.41,0.38,0.97)">
        GTruth_Gscatter == 4             
    </def>
    <def name = "Coherent" col="(0.8,0.2,0.8)">
        GTruth_Gscatter == 5
    </def>
    <def name = "MEC" col="(1.0,1.0,0.4)">
        GTruth_Gscatter == 10
    </def>
</recomc>
-->

<!--
<recomc>
    <def name="NC #Delta Radiative #gamma" col ="(1.0,0.4,0.4)"> 
        sim_shower_pdg[0] == 22 &amp;&amp; sim_shower_parent_pdg[0] != 111 &amp;&amp; mctruth_is_delta_radiative ==1 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def> 
    <def name="CC #pi^{0}" col ="(0.0,0.0,0.4)"> 
        sim_shower_pdg[0] == 22 &amp;&amp; sim_shower_parent_pdg[0] == 111 &amp;&amp; mctruth_cc_or_nc==0 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def> 
    <def name = "NC #pi^{0}" col="(0.0,0.0,1.0)">
        sim_shower_pdg[0] == 22 &amp;&amp; sim_shower_parent_pdg[0] == 111 &amp;&amp; mctruth_cc_or_nc==1 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def>
    <def name = "Non #pi^{0} #gamma" col="(0.8,0.2,0.8)">
        sim_shower_pdg[0] == 22 &amp;&amp; sim_shower_parent_pdg[0] != 111 &amp;&amp; mctruth_is_delta_radiative!=1 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def>
    <def name = "Intrinsic #nu_{e} electron" col="(1.0,1.0,0.4)">
        (mctruth_lepton_pdg[0])==11 &amp;&amp; abs(sim_shower_pdg[0]) ==11 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )             
    </def>
    <def name = "BNB Michel e^{#pm}" col="(1.0,0.6,0.0)">
        abs(sim_shower_pdg[0]) ==11 &amp;&amp; abs(sim_shower_parent_pdg[0])==13 &amp;&amp; !(sim_shower_overlay_fraction[0] >=0.8 )
    </def>
    <def name = "Overlay" col="(0.2,0.8,0.2)">
        (sim_shower_overlay_fraction[0] >=0.8 )
    </def>
</recomc>
-->

<alias key="PM" value ="(0.938272)"/>
<alias key="PE" value ="(reco_track_proton_kinetic_energy[0]+0.938272)"/>
<alias key="PCE" value ="(reco_track_calo_energy_plane2[0]+reco_track_calo_energy_max[0]*(reco_track_calo_energy_plane2[0]==0))"/>
<alias key="PP" value = "(sqrt(pow(reco_track_proton_kinetic_energy[0]+0.938272,2)-0.938272*0.938272))"/>
<alias key="LT" value ="0"/>

<!-- Take plane 2 by default, unless no calo info -->
<alias key="GE" value ="((reco_shower_energy_plane2[0]+reco_shower_energy_max[0]*(reco_shower_energy_plane2[0]==0)))" />
<alias key="GEO" value ="((reco_shower_energy_plane2[0]+reco_shower_energy_max[0]*(reco_shower_energy_plane2[0]==0))*1.21 +10.0)" />
<alias key="GDEDXKAL" value ="(reco_shower_kalman_dEdx_plane2_median[0]+(reco_shower_kalman_dEdx_allplane_median[0]*(reco_shower_kalman_dEdx_plane2_median==0)))"/>





<alias key = "GTM" value = "sqrt(pow(0.001*reco_shower_energy_max[0]*reco_shower_diry[0],2)+pow(0.001*reco_shower_energy_max[0]*reco_shower_dirx[0],2))"/>
<alias key = "PTM" value = "sqrt(pow((reco_track_proton_kinetic_energy[0]+0.938272)*reco_track_diry[0],2)+pow((reco_track_proton_kinetic_energy[0]+0.938272)*reco_track_dirx[0],2))"/>

<alias key = "SIDX" value ="(reco_shower_startx[0]-reco_track_startx[0])/(sqrt( pow(reco_shower_startx[0]-reco_track_startx[0],2)+   pow(reco_shower_starty[0]-reco_track_starty[0],2) + pow(reco_shower_startz[0]-reco_track_startz[0],2)    ))"/>
<alias key = "SIDY" value ="(reco_shower_starty[0]-reco_track_starty[0])/(sqrt( pow(reco_shower_startx[0]-reco_track_startx[0],2)+   pow(reco_shower_starty[0]-reco_track_starty[0],2) + pow(reco_shower_startz[0]-reco_track_startz[0],2)    ))"/>
<alias key = "SIDZ" value ="(reco_shower_startz[0]-reco_track_startz[0])/(sqrt( pow(reco_shower_startx[0]-reco_track_startx[0],2)+   pow(reco_shower_starty[0]-reco_track_starty[0],2) + pow(reco_shower_startz[0]-reco_track_startz[0],2)    ))"/>

<alias key="TLDIRY" value= "(mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1])/sqrt( (mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0])*(mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0]) + (mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1])*(mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1]) +(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2])*(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2]))"  />
<alias key="TLDIRX" value= "(mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0])/sqrt( (mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0])*(mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0]) + (mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1])*(mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1]) +(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2])*(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2]))"  />
<alias key="TLDIRZ" value= "(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2])/sqrt( (mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0])*(mctruth_pi0_leading_photon_end[0]-mctruth_pi0_leading_photon_start[0]) + (mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1])*(mctruth_pi0_leading_photon_end[1]-mctruth_pi0_leading_photon_start[1]) +(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2])*(mctruth_pi0_leading_photon_end[2]-mctruth_pi0_leading_photon_start[2]))"  />

<alias key="TSDIRY" value= "(mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1])/sqrt( (mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0])*(mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0]) + (mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1])*(mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1]) +(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2])*(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2]))"  />
<alias key="TSDIRX" value= "(mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0])/sqrt( (mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0])*(mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0]) + (mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1])*(mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1]) +(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2])*(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2]))"  />
<alias key="TSDIRZ" value= "(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2])/sqrt( (mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0])*(mctruth_pi0_subleading_photon_end[0]-mctruth_pi0_subleading_photon_start[0]) + (mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1])*(mctruth_pi0_subleading_photon_end[1]-mctruth_pi0_subleading_photon_start[1]) +(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2])*(mctruth_pi0_subleading_photon_end[2]-mctruth_pi0_subleading_photon_start[2]))"  />



